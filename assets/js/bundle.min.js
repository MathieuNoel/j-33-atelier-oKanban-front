!function(){var t=function(t){var e;return function(a){return e||t(e={exports:{},parent:a},e.exports),e.exports}},e=t((function(t,e){a({}),o({}),s({});const r={base_url:"http://localhost:3000",hideModals:function(){const t=document.getElementsByClassName("modal");for(const e of t)e.classList.remove("is-active")}};t.exports=r})),a=t((function(t,a){const r=e({}),d=(o({}),s({})),n={showAddListModal:function(){document.getElementById("addListModal").classList.add("is-active")},handleAddListForm:async function(t){t.preventDefault();const e=new FormData(t.target);try{const t=await fetch(r.base_url+"/lists",{method:"POST",body:e}),a=await t.json();n.makeListInDOM(a)}catch(a){console.error(a),alert("Impossible d'ajouter une liste !")}t.target.reset(),r.hideModals()},makeListInDOM:function(t){const e=document.getElementById("templateList"),a=document.importNode(e.content,!0);a.querySelector(".panel").dataset.listId=t.id;const o=a.querySelector(".edit-list-form");o.querySelector('input[name="list-id"]').value=t.id;const s=a.querySelector("h2");s.textContent=t.name,s.addEventListener("dblclick",n.showEditListForm),o.addEventListener("submit",n.handleEditListForm),a.querySelector(".add-list-icon").addEventListener("click",d.showAddCardModal),a.querySelector(".delete-list-icon").addEventListener("click",n.deleteList);const r=a.querySelector(".panel-block");new Sortable(r,{group:"list",draggable:".box",onEnd:d.dragCard}),document.querySelector(".card-lists").appendChild(a)},showEditListForm:function(t){t.target.classList.add("is-hidden"),t.target.nextElementSibling.classList.remove("is-hidden")},handleEditListForm:async function(t){t.preventDefault();const e=new FormData(t.target),a=t.target.previousElementSibling;try{const t=await fetch(`${r.base_url}/lists/${e.get("list-id")}`,{method:"PATCH",body:e}),o=await t.json();if(!t.ok)throw o;a.textContent=o.name}catch(o){alert("Impossible de modifier la liste !"),console.error(o)}a.classList.remove("is-hidden"),t.target.classList.add("is-hidden")},deleteList:async function(t){if(!confirm("Voulez-vous vraiment supprimer cette liste ?"))return;const e=t.target.closest(".panel");try{const t=await fetch(`${r.base_url}/lists/${e.dataset.listId}`,{method:"DELETE"}),a=await t.json();if(!t.ok)throw a;e.remove()}catch(a){alert("Impossible de supprimer la liste !"),console.error(a)}},dragList:function(t){document.querySelectorAll(".panel").forEach(async(t,e)=>{const a=new FormData;a.set("position",e),await fetch(`${r.base_url}/lists/${t.dataset.listId}`,{method:"PATCH",body:a})})}};t.exports=n})),o=t((function(t,o){const r=e({}),d=(s({}),a({}),{makeLabelInDOM:function(t){console.log(t);const e=document.createElement("span");e.textContent=t.title,e.style.backgroundColor=t.color,e.dataset.labelId=t.id,e.classList.add("tag");const a=document.querySelector(`.box[data-card-id="${t.card_has_label.card_id}"]`);e.addEventListener("dblclick",d.dissociateTagFromCard),a.querySelector(".tags").appendChild(e)},dissociateTagFromCard:async function(t){const e=t.target.closest(".box").dataset.cardId,a=t.target.dataset.labelId;try{const o=await fetch(`${r.base_url}/cards/${e}/label/${a}`,{method:"DELETE"}),s=await o.json();if(!o.ok)throw s;t.target.remove()}catch(o){alert("Impossible de dissocier le tag de sa carte !"),console.error(o)}},showAssociateTagToCardModal:async function(t){const e=document.querySelector("#addTagToCardModal");e.classList.add("is-active");const a=t.target.closest(".box");e.querySelector('input[name="card_id"]').value=a.dataset.cardId;try{const t=await fetch(r.base_url+"/labels"),o=await t.json();if(!t.ok)throw o;a.querySelectorAll(".tag");const s=e.querySelector('select[name="tags"]');s.textContent="";for(const e of o){const t=document.createElement("option");t.value=e.id,t.textContent=e.title,s.appendChild(t)}}catch(o){alert("Impossible de r\xe9cup\xe9rer les labels !"),console.error(o)}},handleAssociateLabelForm:async function(t){t.preventDefault();const e=new FormData(t.target);try{const t=await fetch(`${r.base_url}/cards/${e.get("card_id")}/label/${e.get("tags")}`,{method:"POST"}),a=await t.json();if(!t.ok)throw a;const o=a.labels.find(t=>t.id===Number(e.get("tags")));d.makeLabelInDOM(o),r.hideModals()}catch(a){alert("Impossible d'associer un tag \xe0 sa carte !"),console.error(a)}}});t.exports=d})),s=t((function(t,s){const r=e({}),d=o({}),n=(a({}),{showAddCardModal:function(t){const e=t.target.closest(".panel").dataset.listId;document.querySelector('#addCardModal input[name="list_id"]').value=e,document.getElementById("addCardModal").classList.add("is-active")},handleAddCardForm:async function(t){t.preventDefault();const e=new FormData(t.target),a=await fetch(r.base_url+"/cards",{method:"POST",body:e}),o=await a.json();n.makeCardInDOM(o),t.target.reset(),r.hideModals()},makeCardInDOM:function(t){const e=document.getElementById("templateCard"),a=document.importNode(e.content,!0),o=a.querySelector(".box");o.dataset.cardId=t.id,a.querySelector(".column").textContent=t.title,o.style.backgroundColor=t.color,o.querySelector(".edit-card-icon").addEventListener("click",n.showEditCardForm),o.querySelector(".delete-card-icon").addEventListener("click",n.deleteCard);const s=o.querySelector(".edit-card-form");s.addEventListener("submit",n.handleEditCardForm),o.querySelector(".associate-tag-icon").addEventListener("click",d.showAssociateTagToCardModal),s.querySelector('input[name="card-id"]').value=t.id,document.querySelector(`.panel[data-list-id="${t.list_id}"]`).querySelector(".panel-block").appendChild(a)},showEditCardForm:function(t){const e=t.target.closest(".box");e.querySelector(".card-title").classList.add("is-hidden"),e.querySelector(".edit-card-form").classList.remove("is-hidden")},handleEditCardForm:async function(t){t.preventDefault();const e=new FormData(t.target),a=t.target.previousElementSibling;try{const o=await fetch(`${r.base_url}/cards/${e.get("card-id")}`,{method:"PATCH",body:e}),s=await o.json();if(!o.ok)throw s;a.textContent=s.title,t.target.closest(".box").style.backgroundColor=s.color}catch(o){alert("Impossible de modifier la carte !"),console.error(o)}t.target.classList.add("is-hidden"),a.classList.remove("is-hidden")},deleteCard:async function(t){const e=t.target.closest(".box");try{const t=await fetch(`${r.base_url}/cards/${e.dataset.cardId}`,{method:"DELETE"}),a=await t.json();if(!t.ok)throw a;e.remove()}catch(a){alert("Impossible de supprimer cette carte !"),console.error(a)}},dragCard:function(t){const e=t.from;let a=e.closest(".panel").dataset.listId,o=e.querySelectorAll(".box");if(n.updateAllCards(o,a),e===t.to)return;const s=t.to;o=s.querySelectorAll(".box"),a=s.closest(".panel").dataset.listId,n.updateAllCards(o,a)},updateAllCards:function(t,e){t.forEach(async(t,a)=>{const o=new FormData;o.set("position",a),o.set("list_id",e);try{const e=await fetch(`${r.base_url}/cards/${t.dataset.cardId}`,{method:"PATCH",body:o}),a=await e.json();if(!e.ok)throw a}catch(s){alert("Impossible de d\xe9placer la carte !"),console.error(s)}})}});t.exports=n}));const r=e({}),d=o({}),n=s({}),c=a({});var l={init:function(){l.getListsFromAPI(),l.addListenerToActions()},addListenerToActions:function(){document.getElementById("addListButton").addEventListener("click",c.showAddListModal);const t=document.getElementsByClassName("close");for(const e of t)e.addEventListener("click",r.hideModals);document.querySelector("#addListModal form").addEventListener("submit",c.handleAddListForm),document.querySelector("#addCardModal form").addEventListener("submit",n.handleAddCardForm),document.querySelector("#addTagToCardModal form").addEventListener("submit",d.handleAssociateLabelForm)},getListsFromAPI:async function(){try{const t=await fetch(r.base_url+"/lists"),e=await t.json();console.log(e);for(const o of e){c.makeListInDOM(o);for(const t of o.cards){n.makeCardInDOM(t);for(const e of t.labels)d.makeLabelInDOM(e)}}const a=document.querySelector(".card-lists");new Sortable(a,{draggable:".panel",onEnd:c.dragList})}catch(t){console.error(t),alert("Impossible de r\xe9cup\xe9rer les listes !")}}};document.addEventListener("DOMContentLoaded",l.init)}();